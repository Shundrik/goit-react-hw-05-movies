{"version":3,"file":"static/js/295.619fcbe9.chunk.js","mappings":"yOAeMA,EAAeC,EAAAA,GAAAA,OAAH,8NAUZC,EAAUD,EAAAA,GAAAA,IAAH,oGAKPE,EAAiBF,EAAAA,GAAAA,IAAH,qEAKdG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,sJA0Df,UA9CqB,WAAO,IAAD,IACzB,GAA0BK,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaP,GAASQ,KAAKT,EAC5B,GAAE,CAACC,IAECF,EAAL,CAOA,OACE,iCACE,UAACP,EAAD,CAAckB,KAAK,SAASC,QANX,WACnBR,EAASE,EAASO,MAAMC,KACzB,EAIG,WACE,SAAC,MAAD,IADF,eAGA,UAACnB,EAAD,YACE,kCAAKK,EAAMe,aAAX,QAAoBf,EAAMgB,QAC1B,gBACEC,IAAG,UA5BI,oCA4BJ,OAAgBjB,EAAMkB,aACzBC,IAAG,UAAEnB,EAAMe,aAAR,QAAiBf,EAAMgB,WAI9B,SAAC,EAAAI,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,OAGF,UAACzB,EAAD,YACE,SAACC,EAAD,CAAWyB,GAAG,OAAOT,MAAOP,EAASO,MAArC,mBAGA,SAAChB,EAAD,CAAWyB,GAAG,UAAUT,MAAOP,EAASO,MAAxC,0BA1BL,CAgCF,C","sources":["pages/MovieDatails.jsx"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport {\n  NavLink,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\n\nimport { TiArrowLeftThick } from 'react-icons/ti';\n\nimport { getFilmsById } from 'servises/api';\n\nimport styled from 'styled-components';\n\nconst ButtonGoBack = styled.button`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  padding: 5px 15px;\n  border-color: transparent;\n  border-radius: 3px;\n  background-color: #3b3bcc;\n  color: #fff;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\nconst WrapperDatails = styled.div`\n  margin-left: 25%;\n  margin-bottom: 20px;\n`;\n\nconst MyNavLink = styled(NavLink)`\n  /* font-size: 20px; */\n  margin: 20px;\n  text-decoration: none;\n  color: #3b3bcc;\n  &:hover {\n    color: orange;\n  }\n`;\n\nconst base_url = 'https://image.tmdb.org/t/p/w300/';\n\nconst MovieDatails = () => {\n  const [movie, setMovie] = useState(null);\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    getFilmsById(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  return (\n    <>\n      <ButtonGoBack type=\"button\" onClick={handleGoBack}>\n        <TiArrowLeftThick /> Go back\n      </ButtonGoBack>\n      <Wrapper>\n        <h1>{movie.title ?? movie.name}</h1>\n        <img\n          src={`${base_url}${movie.poster_path}`}\n          alt={movie.title ?? movie.name}\n        />\n      </Wrapper>\n      \n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n\n      <WrapperDatails>\n        <MyNavLink to=\"cast\" state={location.state}>\n          Cast\n        </MyNavLink>\n        <MyNavLink to=\"reviews\" state={location.state}>\n          Reviews\n        </MyNavLink>\n      </WrapperDatails>\n    </>\n  );\n};\nexport default MovieDatails;\n"],"names":["ButtonGoBack","styled","Wrapper","WrapperDatails","MyNavLink","NavLink","useState","movie","setMovie","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","getFilmsById","then","type","onClick","state","from","title","name","src","poster_path","alt","Suspense","fallback","to"],"sourceRoot":""}